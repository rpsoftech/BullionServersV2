// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: proto/limit-server.proto

package limit_server

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BuySell int32

const (
	BuySell_BUY  BuySell = 0
	BuySell_SELL BuySell = 1
)

// Enum value maps for BuySell.
var (
	BuySell_name = map[int32]string{
		0: "BUY",
		1: "SELL",
	}
	BuySell_value = map[string]int32{
		"BUY":  0,
		"SELL": 1,
	}
)

func (x BuySell) Enum() *BuySell {
	p := new(BuySell)
	*p = x
	return p
}

func (x BuySell) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BuySell) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_limit_server_proto_enumTypes[0].Descriptor()
}

func (BuySell) Type() protoreflect.EnumType {
	return &file_proto_limit_server_proto_enumTypes[0]
}

func (x BuySell) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BuySell.Descriptor instead.
func (BuySell) EnumDescriptor() ([]byte, []int) {
	return file_proto_limit_server_proto_rawDescGZIP(), []int{0}
}

type UplinkPlaceLimitRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ReqId             string                 `protobuf:"bytes,1,opt,name=reqId,proto3" json:"reqId,omitempty"`
	BullionId         string                 `protobuf:"bytes,2,opt,name=bullionId,proto3" json:"bullionId,omitempty"`
	ProductGroupMapId string                 `protobuf:"bytes,3,opt,name=productGroupMapId,proto3" json:"productGroupMapId,omitempty"`
	Weight            int32                  `protobuf:"varint,4,opt,name=weight,proto3" json:"weight,omitempty"`
	Price             float32                `protobuf:"fixed32,6,opt,name=price,proto3" json:"price,omitempty"`
	UserId            string                 `protobuf:"bytes,7,opt,name=userId,proto3" json:"userId,omitempty"`
	ProductId         string                 `protobuf:"bytes,9,opt,name=productId,proto3" json:"productId,omitempty"`
	GroupId           string                 `protobuf:"bytes,8,opt,name=groupId,proto3" json:"groupId,omitempty"`
	ProductGroupId    string                 `protobuf:"bytes,10,opt,name=productGroupId,proto3" json:"productGroupId,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *UplinkPlaceLimitRequest) Reset() {
	*x = UplinkPlaceLimitRequest{}
	mi := &file_proto_limit_server_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UplinkPlaceLimitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UplinkPlaceLimitRequest) ProtoMessage() {}

func (x *UplinkPlaceLimitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_limit_server_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UplinkPlaceLimitRequest.ProtoReflect.Descriptor instead.
func (*UplinkPlaceLimitRequest) Descriptor() ([]byte, []int) {
	return file_proto_limit_server_proto_rawDescGZIP(), []int{0}
}

func (x *UplinkPlaceLimitRequest) GetReqId() string {
	if x != nil {
		return x.ReqId
	}
	return ""
}

func (x *UplinkPlaceLimitRequest) GetBullionId() string {
	if x != nil {
		return x.BullionId
	}
	return ""
}

func (x *UplinkPlaceLimitRequest) GetProductGroupMapId() string {
	if x != nil {
		return x.ProductGroupMapId
	}
	return ""
}

func (x *UplinkPlaceLimitRequest) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *UplinkPlaceLimitRequest) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *UplinkPlaceLimitRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UplinkPlaceLimitRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *UplinkPlaceLimitRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *UplinkPlaceLimitRequest) GetProductGroupId() string {
	if x != nil {
		return x.ProductGroupId
	}
	return ""
}

type UplinkPlaceLimitResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReqId         string                 `protobuf:"bytes,1,opt,name=reqId,proto3" json:"reqId,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UplinkPlaceLimitResponse) Reset() {
	*x = UplinkPlaceLimitResponse{}
	mi := &file_proto_limit_server_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UplinkPlaceLimitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UplinkPlaceLimitResponse) ProtoMessage() {}

func (x *UplinkPlaceLimitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_limit_server_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UplinkPlaceLimitResponse.ProtoReflect.Descriptor instead.
func (*UplinkPlaceLimitResponse) Descriptor() ([]byte, []int) {
	return file_proto_limit_server_proto_rawDescGZIP(), []int{1}
}

func (x *UplinkPlaceLimitResponse) GetReqId() string {
	if x != nil {
		return x.ReqId
	}
	return ""
}

func (x *UplinkPlaceLimitResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UplinkPlaceLimitResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PlaceOrderHedgingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReqId         string                 `protobuf:"bytes,1,opt,name=reqId,proto3" json:"reqId,omitempty"`
	BullionId     string                 `protobuf:"bytes,2,opt,name=bullionId,proto3" json:"bullionId,omitempty"`
	BaseSymbole   string                 `protobuf:"bytes,3,opt,name=baseSymbole,proto3" json:"baseSymbole,omitempty"`
	Price         float32                `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
	Volume        float32                `protobuf:"fixed32,5,opt,name=volume,proto3" json:"volume,omitempty"`
	BuySell       BuySell                `protobuf:"varint,6,opt,name=buySell,proto3,enum=proto.BuySell" json:"buySell,omitempty"`
	Secret        string                 `protobuf:"bytes,7,opt,name=secret,proto3" json:"secret,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlaceOrderHedgingRequest) Reset() {
	*x = PlaceOrderHedgingRequest{}
	mi := &file_proto_limit_server_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlaceOrderHedgingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceOrderHedgingRequest) ProtoMessage() {}

func (x *PlaceOrderHedgingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_limit_server_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceOrderHedgingRequest.ProtoReflect.Descriptor instead.
func (*PlaceOrderHedgingRequest) Descriptor() ([]byte, []int) {
	return file_proto_limit_server_proto_rawDescGZIP(), []int{2}
}

func (x *PlaceOrderHedgingRequest) GetReqId() string {
	if x != nil {
		return x.ReqId
	}
	return ""
}

func (x *PlaceOrderHedgingRequest) GetBullionId() string {
	if x != nil {
		return x.BullionId
	}
	return ""
}

func (x *PlaceOrderHedgingRequest) GetBaseSymbole() string {
	if x != nil {
		return x.BaseSymbole
	}
	return ""
}

func (x *PlaceOrderHedgingRequest) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *PlaceOrderHedgingRequest) GetVolume() float32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *PlaceOrderHedgingRequest) GetBuySell() BuySell {
	if x != nil {
		return x.BuySell
	}
	return BuySell_BUY
}

func (x *PlaceOrderHedgingRequest) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type PlaceOrderHedgingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReqId         string                 `protobuf:"bytes,1,opt,name=reqId,proto3" json:"reqId,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	DealNo        string                 `protobuf:"bytes,3,opt,name=dealNo,proto3" json:"dealNo,omitempty"`
	Price         float32                `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
	BaseSymbole   string                 `protobuf:"bytes,5,opt,name=baseSymbole,proto3" json:"baseSymbole,omitempty"`
	Volume        float32                `protobuf:"fixed32,6,opt,name=volume,proto3" json:"volume,omitempty"`
	Secret        string                 `protobuf:"bytes,7,opt,name=secret,proto3" json:"secret,omitempty"`
	BuySell       BuySell                `protobuf:"varint,8,opt,name=buySell,proto3,enum=proto.BuySell" json:"buySell,omitempty"`
	Extras        string                 `protobuf:"bytes,9,opt,name=extras,proto3" json:"extras,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlaceOrderHedgingResponse) Reset() {
	*x = PlaceOrderHedgingResponse{}
	mi := &file_proto_limit_server_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlaceOrderHedgingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceOrderHedgingResponse) ProtoMessage() {}

func (x *PlaceOrderHedgingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_limit_server_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceOrderHedgingResponse.ProtoReflect.Descriptor instead.
func (*PlaceOrderHedgingResponse) Descriptor() ([]byte, []int) {
	return file_proto_limit_server_proto_rawDescGZIP(), []int{3}
}

func (x *PlaceOrderHedgingResponse) GetReqId() string {
	if x != nil {
		return x.ReqId
	}
	return ""
}

func (x *PlaceOrderHedgingResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PlaceOrderHedgingResponse) GetDealNo() string {
	if x != nil {
		return x.DealNo
	}
	return ""
}

func (x *PlaceOrderHedgingResponse) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *PlaceOrderHedgingResponse) GetBaseSymbole() string {
	if x != nil {
		return x.BaseSymbole
	}
	return ""
}

func (x *PlaceOrderHedgingResponse) GetVolume() float32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *PlaceOrderHedgingResponse) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *PlaceOrderHedgingResponse) GetBuySell() BuySell {
	if x != nil {
		return x.BuySell
	}
	return BuySell_BUY
}

func (x *PlaceOrderHedgingResponse) GetExtras() string {
	if x != nil {
		return x.Extras
	}
	return ""
}

var File_proto_limit_server_proto protoreflect.FileDescriptor

var file_proto_limit_server_proto_rawDesc = string([]byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x2d, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xa1, 0x02, 0x0a, 0x17, 0x55, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x50, 0x6c, 0x61, 0x63,
	0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x72, 0x65, 0x71, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65,
	0x71, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x75, 0x6c, 0x6c, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x6c, 0x6c, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x64, 0x0a, 0x18, 0x55, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x50,
	0x6c, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x71, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x72, 0x65, 0x71, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xe0, 0x01, 0x0a, 0x18,
	0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x65, 0x64, 0x67, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x71, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x71, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x62, 0x75, 0x6c, 0x6c, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x62, 0x75, 0x6c, 0x6c, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x62, 0x61, 0x73, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x07,
	0x62, 0x75, 0x79, 0x53, 0x65, 0x6c, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x79, 0x53, 0x65, 0x6c, 0x6c, 0x52, 0x07, 0x62,
	0x75, 0x79, 0x53, 0x65, 0x6c, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x8d,
	0x02, 0x0a, 0x19, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x65, 0x64,
	0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x72, 0x65, 0x71, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x71,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x65, 0x61, 0x6c, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65,
	0x61, 0x6c, 0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x61,
	0x73, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x62, 0x61, 0x73, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x07,
	0x62, 0x75, 0x79, 0x53, 0x65, 0x6c, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x79, 0x53, 0x65, 0x6c, 0x6c, 0x52, 0x07, 0x62,
	0x75, 0x79, 0x53, 0x65, 0x6c, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x74, 0x72, 0x61, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x78, 0x74, 0x72, 0x61, 0x73, 0x2a, 0x1c,
	0x0a, 0x07, 0x42, 0x75, 0x79, 0x53, 0x65, 0x6c, 0x6c, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x55, 0x59,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x45, 0x4c, 0x4c, 0x10, 0x01, 0x32, 0x97, 0x02, 0x0a,
	0x0b, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x60, 0x0a, 0x17,
	0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x65, 0x64, 0x67, 0x69, 0x6e,
	0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x65, 0x64, 0x67, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x65, 0x64, 0x67,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x28, 0x01, 0x30, 0x01, 0x12, 0x4d,
	0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a,
	0x10, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x6c, 0x69, 0x6e, 0x6b,
	0x50, 0x6c, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x6c, 0x69, 0x6e, 0x6b,
	0x50, 0x6c, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x12, 0x5a, 0x10, 0x73, 0x72, 0x63, 0x2f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
})

var (
	file_proto_limit_server_proto_rawDescOnce sync.Once
	file_proto_limit_server_proto_rawDescData []byte
)

func file_proto_limit_server_proto_rawDescGZIP() []byte {
	file_proto_limit_server_proto_rawDescOnce.Do(func() {
		file_proto_limit_server_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_limit_server_proto_rawDesc), len(file_proto_limit_server_proto_rawDesc)))
	})
	return file_proto_limit_server_proto_rawDescData
}

var file_proto_limit_server_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_limit_server_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_limit_server_proto_goTypes = []any{
	(BuySell)(0),                      // 0: proto.BuySell
	(*UplinkPlaceLimitRequest)(nil),   // 1: proto.UplinkPlaceLimitRequest
	(*UplinkPlaceLimitResponse)(nil),  // 2: proto.UplinkPlaceLimitResponse
	(*PlaceOrderHedgingRequest)(nil),  // 3: proto.PlaceOrderHedgingRequest
	(*PlaceOrderHedgingResponse)(nil), // 4: proto.PlaceOrderHedgingResponse
}
var file_proto_limit_server_proto_depIdxs = []int32{
	0, // 0: proto.PlaceOrderHedgingRequest.buySell:type_name -> proto.BuySell
	0, // 1: proto.PlaceOrderHedgingResponse.buySell:type_name -> proto.BuySell
	4, // 2: proto.LimitServer.PlaceOrderHedgingServer:input_type -> proto.PlaceOrderHedgingResponse
	1, // 3: proto.LimitServer.PlaceLimit:input_type -> proto.UplinkPlaceLimitRequest
	1, // 4: proto.LimitServer.PlaceLimitStream:input_type -> proto.UplinkPlaceLimitRequest
	3, // 5: proto.LimitServer.PlaceOrderHedgingServer:output_type -> proto.PlaceOrderHedgingRequest
	2, // 6: proto.LimitServer.PlaceLimit:output_type -> proto.UplinkPlaceLimitResponse
	2, // 7: proto.LimitServer.PlaceLimitStream:output_type -> proto.UplinkPlaceLimitResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_limit_server_proto_init() }
func file_proto_limit_server_proto_init() {
	if File_proto_limit_server_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_limit_server_proto_rawDesc), len(file_proto_limit_server_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_limit_server_proto_goTypes,
		DependencyIndexes: file_proto_limit_server_proto_depIdxs,
		EnumInfos:         file_proto_limit_server_proto_enumTypes,
		MessageInfos:      file_proto_limit_server_proto_msgTypes,
	}.Build()
	File_proto_limit_server_proto = out.File
	file_proto_limit_server_proto_goTypes = nil
	file_proto_limit_server_proto_depIdxs = nil
}
