syntax = "proto3";

package proto;

option go_package = "protocode/limit-server";

enum BuySell {
    BUY = 0;
    SELL = 1;
}
message UplinkPlaceLimitRequest {
    string reqId = 1;
    string bullionId = 2;
    string productGroupMapId = 3;
    int32 weight = 4;
    float price = 6;
    string userId = 7;
    string productId = 9;
    string groupId = 8;
    string productGroupId = 10;
}

message UplinkPlaceLimitResponse {
    string reqId = 1;
    bool success = 2;
    string message = 3;
}

message PlaceOrderHedgingRequest {
    string reqId = 1;
    string bullionId = 2;
    string baseSymbole = 3;
    float price = 4;
    float volume = 5;
    BuySell buySell = 6;
    string secret = 7;

}
message PlaceOrderHedgingResponse {
    string reqId = 1;
    bool success = 2;
    string dealNo = 3;
    float price = 4;
    string baseSymbole = 5;
    float volume = 6;
    string secret = 7;
    BuySell buySell = 8;
    string extras = 9;
}

service LimitServer {
    rpc PlaceOrderHedgingServer(stream PlaceOrderHedgingResponse) returns (stream PlaceOrderHedgingRequest);
    rpc PlaceLimit(UplinkPlaceLimitRequest) returns (UplinkPlaceLimitResponse);
    rpc PlaceLimitStream(stream UplinkPlaceLimitRequest) returns (stream UplinkPlaceLimitResponse);
}